#!/bin/bash

echo $2
case "$1" in
    compile)
        for f in `find $2 -name "*.elm" | grep -v "elm-stuff"`
        do
            base_file="${f%.*}"
            output_dir="${3:-output}"
            echo "Processing $f"
            mkdir -p "$output_dir"
            if [[ $* != *--unsafe* ]]
            then
                elm-make $f --output .tmp-elm.js
                rm .tmp-elm.js
            fi
            dir_suffix=${base_file#$2}
            dir_prefix=${2%$dir_suffix}

            echo "Copying to $output_dir$dir_suffix.ex"

            node elmchemy.js $f > $output_dir$dir_suffix.ex

            # do something on $f
        done
        ;;
    aggregate)
        rm -rf ".elmchemy"
        echo "" > .elmchemy_output
        for f in `find $2 -name "*.elm" | grep -v "elm-stuff" | grep -v "#."`
        do
            echo ">>>>$f" >> .elmchemy_output
            echo $f
            elm-make $f --output .elmchemy_output_tmp.js || { echo 'Compilation failed' ; exit 1; }
            rm .elmchemy_output_tmp.js
            cat $f >> .elmchemy_output
        done
        node elmchemy.js .elmchemy_output > .elmchemy_elixir_output
        # current_file=""
        # while read line
        # do
        #     if [[ $line =~ ">>>>" ]]; then
        #         echo "yo"
        #         current_file="${line/>>>>/.elmchemy/}"
        #         mkdir -p `dirname $current_file`
        #         touch $current_file
        #     else
        #         echo $line >> $current_file
        #     fi
        # done < .elmchemy_output

        ;;
    *)
        echo $"Usage: $0 compile [input_dir] [output_dir] [--unsafe]"
        exit 1

esac
